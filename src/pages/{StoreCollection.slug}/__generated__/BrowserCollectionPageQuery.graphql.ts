
/**
 * Warning: This is an autogenerated file.
 *
 * Changes in this file won't take effect and will be overwritten
 */

// Base Types
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
type Maybe<T> = T | null | undefined
type Scalars = {
  Boolean: boolean
  String: string
  Float: number
  Int: number
  ID: string
}

// Operation related types
export type BrowserCollectionPageQueryQueryVariables = Exact<{
  id: Scalars['String'];
}>;


export type BrowserCollectionPageQueryQuery = { site: Maybe<{ siteMetadata: Maybe<{ titleTemplate: Maybe<string>, title: Maybe<string>, description: Maybe<string> }> }>, storeCollection: Maybe<{ seo: { title: string, description: string }, meta: { selectedFacets: Array<{ key: string, value: string }> } }> };


// Query Related Code

export const BrowserCollectionPageQuery = {
  query: process.env.NODE_ENV === 'production' ? undefined : "query BrowserCollectionPageQuery($id: String!) {\n  site {\n    siteMetadata {\n      titleTemplate\n      title\n      description\n    }\n  }\n  storeCollection(id: {eq: $id}) {\n    seo {\n      title\n      description\n    }\n    meta {\n      selectedFacets {\n        key\n        value\n      }\n    }\n  }\n}\n",
  sha256Hash: "d3f24abd216d309fee669cea2756fd75f18346b879d8457535e0a8273538c265",
  operationName: "BrowserCollectionPageQuery",
}

