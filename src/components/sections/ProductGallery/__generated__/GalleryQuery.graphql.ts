
/**
 * Warning: This is an autogenerated file.
 *
 * Changes in this file won't take effect and will be overwritten
 */

// Base Types
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
type Maybe<T> = T | null | undefined
type Scalars = {
  Boolean: boolean
  String: string
  Float: number
  Int: number
  ID: string
}

// Operation related types
export type GalleryQueryQueryVariables = Exact<{
  fullText: Maybe<Scalars['String']>;
  selectedFacets: Maybe<Array<Vtex_SelectedFacetInput> | Vtex_SelectedFacetInput>;
  from: Maybe<Scalars['Int']>;
  to: Maybe<Scalars['Int']>;
  sort: Maybe<Scalars['String']>;
  hideUnavailableItems?: Maybe<Scalars['Boolean']>;
}>;


export type GalleryQueryQuery = { vtex: { productSearch: Maybe<{ products: Maybe<Array<Maybe<{ productId: Maybe<string>, productName: Maybe<string> }>>> }> } };


// Query Related Code

export const GalleryQuery = {
  query: process.env.NODE_ENV === 'production' ? undefined : "query GalleryQuery($fullText: String, $selectedFacets: [VTEX_SelectedFacetInput!], $from: Int, $to: Int, $sort: String, $hideUnavailableItems: Boolean = false) {\n  vtex {\n    productSearch(\n      hideUnavailableItems: $hideUnavailableItems\n      selectedFacets: $selectedFacets\n      fullText: $fullText\n      from: $from\n      to: $to\n      orderBy: $sort\n    ) {\n      products {\n        productId\n        productName\n      }\n    }\n  }\n}\n",
  sha256Hash: "ee99fb017f57e8aaac5f4f78bd6598ce82de5f346a6f9f29c1da4101d731a57b",
  operationName: "GalleryQuery",
}

